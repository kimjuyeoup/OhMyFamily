plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.23.3' // spotless
	id 'com.google.cloud.tools.jib' version '3.4.4' // jib

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

spotless {
	java {
		// Google Java 포맷 적용
		googleJavaFormat()
		// 아래 순서로 import문 정렬
		importOrder('java', 'javax', 'jakarta', 'org', 'com')
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 각 라인 끝에 있는 공백을 제거
		trimTrailingWhitespace()
		// 파일 끝에 새로운 라인 추가
		endWithNewline()
	}
}

jib {
	from {
		image = "openjdk:17-alpine"
	}
	to {
		image = "ohmyfamily/api"
		tags = ["latest"]
		auth {
			username = 'ohmyfamily'
			password = System.getenv('DOCKERHUB_PASSWORD') ?: ''
		}
	}
	container {
		jvmFlags = ["-Xms128m", "-Xmx128m", "-Dspring.profiles.active=dev", "-Dfile.encoding=UTF-8"]
		ports = ["8080"]
		allowInsecureRegistries = true
	}
}


dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	compileOnly 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'

	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.hibernate.orm:hibernate-core:6.2.6.Final'

	implementation 'org.jboss.logging:jboss-logging:3.4.3.Final'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('compileJava') {
	dependsOn 'spotlessApply'
	dependsOn 'addGitHooks'
}

tasks.register('addGitHooks', Copy) {
	from './script/pre-commit'
	into './.git/hooks'
	filePermissions {
		unix('r-xr-xr-x')
	}
}