user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    33282;

events {
    use epoll;
    worker_connections  1024;
    multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  types_hash_max_size 4096;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  include       conf.d/*.conf;

  map $http_upgrade $connection_upgrade {
      default     "upgrade";
  }

  upstream springboot {
    server 127.0.0.1:8080;
    keepalive 1024;
  }

  server {
      listen        80 default_server;
      listen        [::]:80 default_server;
      server_name oh-my-family.com www.oh-my-family.com api.oh-my-family.com;

      set $cors '';
          if ($http_origin ~* (https?://(localhost:5173|.*\.oh-my-family\.com))) {
              set $cors $http_origin;
          }
          # 기본값 설정 (필요 시)
          if ($cors = '') {
              set $cors 'https://www.oh-my-family.com';
          }

          # OPTIONS 요청 처리
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' $cors;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Length' 0;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              return 204;
          }

          # 프록시 설정
          proxy_pass http://springboot;
          proxy_http_version 1.1;
          proxy_set_header Connection $connection_upgrade;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # 실제 요청에 CORS 헤더 추가
          add_header 'Access-Control-Allow-Origin' $cors;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With';
          add_header 'Access-Control-Allow-Credentials' 'true';
      }

      access_log    /var/log/nginx/access.log main;

      client_header_timeout 60;
      client_body_timeout   60;
      keepalive_timeout     60;
      gzip                  off;
      gzip_comp_level       4;
      client_max_body_size 10M;

      # Include the Elastic Beanstalk generated locations
      include conf.d/elasticbeanstalk/healthd.conf;
  }
}